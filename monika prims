#include<bits/stdc++.h>
	using namespace std;
	class graph
	{
		int m,n,v,w,e,i,j,a[10][10],visited[10];
		public:
			readgraph()
			{
			cout<<"Enter the no. of vertices: ";
			cin>>v;
		
			for(i=0;i<v;i++)
			{
				//visited[i]=0;
				for(j=0;j<v;j++)
				{
					visited[i]=0;
					a[i][j]=100;
				}
			}
		
			cout<<"\nEnter the no. of edges: ";
			cin>>e;
		
			for(i=0;i<e;i++)
			{
				cout<<"Enter the adj_node:  "<<endl;
				cin>>m>>n;
				cout<<"Enter the distance between them:  ";
				cin>>w;
				a[m-1][n-1]=a[n-1][m-1]=w;
			}
		}
		void display()
		{
			cout<<"\nAdjacency matrix:";
			for(i=0;i<v;i++)
			{
				cout<<endl;
				for(j=0;j<v;j++)
				{
					cout<<a[i][j]<<"   ";
				}
				cout<<endl;
			}
		}
	
		void minimum()
		{
			int p=0,q=0,total=0,min;
			visited[0]=1;
			for(int count=0;count<(v-1);count++)
			{
				min=100;
				for(i=0;i<v;i++)
				{
					if(visited[i]==1)
					{
						for(j=0;j<v;j++)
						{
							if(visited[j]!=1)
							{
								if(min > a[i][j])
								{
									min=a[i][j];
									p=i;
									q=j;
								}
							}
						}
					}
				}
			visited[p]=1;
			visited[q]=1;
			total=total+min;
			cout<<"Minimum distance is"<<(p+1)<<" -> "<<(q+1)<<"   : "<<min<< endl;
			
			}
			cout<<"The minimum total cost of connections of all branches is: "<<total<<endl;
		}
};	

int main()
{
	int ch;
	graph g;
	do
	{
		cout<<"==========PRIM'S ALGORITHM================="<<endl;
		cout<<"\n1.Readgraph\n \n2.Display matrix\n \n3.Minimum distance\n"<<endl;
		cout<<"Enter your choice :"<<endl;
		cin>>ch;
	
	switch(ch)
	{	
	case 1: cout<<"read the graph"<<endl;	
		g.readgraph();
		break;

	case 2: cout<<"Display matrix"<<endl;
		g.display();
		break;

	case 3: cout<<"Minimum distance"<<endl;
		g.minimum();
		break;
	}
	
	}while(ch!=4);
	return 0;
}
